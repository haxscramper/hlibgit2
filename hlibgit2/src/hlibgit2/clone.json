{
  "records": [
    {
      "name": {
        "name": "git_clone_options",
        "dbgOrigin": " typedef type libgit2/include/git2/clone.h:164:3 typedef type libgit2/include/git2/clone.h:164:3 > typedef!=nullptr > struct"
      },
      "fields": [
        {
          "name": "version",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin/unqual",
            "isBuiltin": true
          }
        },
        {
          "name": "checkout_opts",
          "type": {
            "name": "git_checkout_options",
            "dbgOrigin": " typedef type libgit2/include/git2/checkout.h:345:3"
          },
          "doc": "/**\n\t * These options are passed to the checkout step. To disable\n\t * checkout, set the `checkout_strategy` to\n\t * `GIT_CHECKOUT_NONE`.\n\t */"
        },
        {
          "name": "fetch_opts",
          "type": {
            "name": "git_fetch_options",
            "dbgOrigin": " typedef type libgit2/include/git2/remote.h:775:3"
          },
          "doc": "/**\n\t * Options which control the fetch, including callbacks.\n\t *\n\t * The callbacks are used for reporting fetch progress, and for acquiring\n\t * credentials in the event they are needed.\n\t */"
        },
        {
          "name": "bare",
          "type": {
            "name": "int",
            "dbgOrigin": " >builtin/unqual",
            "isBuiltin": true
          },
          "doc": "/**\n\t * Set to zero (false) to create a standard repo, or non-zero\n\t * for a bare repo\n\t */"
        },
        {
          "name": "local",
          "type": {
            "name": "git_clone_local_t",
            "dbgOrigin": " typedef type libgit2/include/git2/clone.h:53:3"
          },
          "doc": "/**\n\t * Whether to use a fetch or copy the object database.\n\t */"
        },
        {
          "name": "checkout_branch",
          "type": {
            "name": "char",
            "qualifiers": [
              {
                "isPointer": true
              },
              {
                "isConst": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/**\n\t * The name of the branch to checkout. NULL means use the\n\t * remote's default branch.\n\t */"
        },
        {
          "name": "repository_cb",
          "type": {
            "name": "git_repository_create_cb",
            "dbgOrigin": " typedef type libgit2/include/git2/clone.h:90:13"
          },
          "doc": "/**\n\t * A callback used to create the new repository into which to\n\t * clone. If NULL, the 'bare' field will be used to determine\n\t * whether to create a bare repository.\n\t */"
        },
        {
          "name": "repository_cb_payload",
          "type": {
            "name": "void",
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr",
            "isBuiltin": true
          },
          "doc": "/**\n\t * An opaque payload to pass to the git_repository creation callback.\n\t * This parameter is ignored unless repository_cb is non-NULL.\n\t */"
        },
        {
          "name": "remote_cb",
          "type": {
            "name": "git_remote_create_cb",
            "dbgOrigin": " typedef type libgit2/include/git2/clone.h:69:13"
          },
          "doc": "/**\n\t * A callback used to create the git_remote, prior to its being\n\t * used to perform the clone operation. See the documentation for\n\t * git_remote_create_cb for details. This parameter may be NULL,\n\t * indicating that git_clone should provide default behavior.\n\t */"
        },
        {
          "name": "remote_cb_payload",
          "type": {
            "name": "void",
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr",
            "isBuiltin": true
          },
          "doc": "/**\n\t * An opaque payload to pass to the git_remote creation callback.\n\t * This parameter is ignored unless remote_cb is non-NULL.\n\t */"
        }
      ],
      "recordDefName": {
        "name": "git_clone_options",
        "tag": "TypeTagStruct"
      }
    }
  ],
  "enums": [
    {
      "fields": [
        {
          "name": "GIT_CLONE_LOCAL_AUTO"
        },
        {
          "name": "GIT_CLONE_LOCAL",
          "value": "1"
        },
        {
          "name": "GIT_CLONE_NO_LOCAL",
          "value": "2"
        },
        {
          "name": "GIT_CLONE_LOCAL_NO_LINKS",
          "value": "3"
        }
      ],
      "name": {
        "name": "git_clone_local_t",
        "dbgOrigin": "enum typedef typedef:git_clone_local_tname:libgit2/include/git2/clone.h:33:9"
      }
    }
  ],
  "functions": [
    {
      "name": "git_clone_options_init",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin/unqual",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_clone_options",
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/clone.h:164:3"
          },
          "name": "opts"
        },
        {
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin/unqual",
            "isBuiltin": true
          },
          "name": "version"
        }
      ]
    },
    {
      "name": "git_clone",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin/unqual",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_repository",
            "qualifiers": [
              {
                "isPointer": true
              },
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "char",
            "qualifiers": [
              {
                "isPointer": true
              },
              {
                "isConst": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "name": "url"
        },
        {
          "type": {
            "name": "char",
            "qualifiers": [
              {
                "isPointer": true
              },
              {
                "isConst": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "name": "local_path"
        },
        {
          "type": {
            "name": "git_clone_options",
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/clone.h:164:3"
          },
          "name": "options"
        }
      ]
    }
  ],
  "typedefs": [
    {
      "name": {
        "name": "git_remote_create_cb",
        "dbgOrigin": "libgit2/include/git2/clone.h:69:13"
      },
      "baseType": {
        "parameters": [
          {
            "name": "int",
            "dbgOrigin": " >builtin/unqual",
            "isBuiltin": true
          },
          {
            "name": "git_remote",
            "qualifiers": [
              {
                "isPointer": true
              },
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:241:27"
          },
          {
            "name": "git_repository",
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          {
            "name": "char",
            "qualifiers": [
              {
                "isPointer": true
              },
              {
                "isConst": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          {
            "name": "char",
            "qualifiers": [
              {
                "isPointer": true
              },
              {
                "isConst": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          {
            "name": "void",
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr",
            "isBuiltin": true
          }
        ],
        "qualifiers": [
          {
            "isPointer": true
          }
        ],
        "kind": "FunctionPtr",
        "dbgOrigin": " Typedef Decl Visit T-pointer >ref/ptr >func"
      }
    },
    {
      "name": {
        "name": "git_repository_create_cb",
        "dbgOrigin": "libgit2/include/git2/clone.h:90:13"
      },
      "baseType": {
        "parameters": [
          {
            "name": "int",
            "dbgOrigin": " >builtin/unqual",
            "isBuiltin": true
          },
          {
            "name": "git_repository",
            "qualifiers": [
              {
                "isPointer": true
              },
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          {
            "name": "char",
            "qualifiers": [
              {
                "isPointer": true
              },
              {
                "isConst": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          {
            "name": "int",
            "dbgOrigin": " >builtin/unqual",
            "isBuiltin": true
          },
          {
            "name": "void",
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr",
            "isBuiltin": true
          }
        ],
        "qualifiers": [
          {
            "isPointer": true
          }
        ],
        "kind": "FunctionPtr",
        "dbgOrigin": " Typedef Decl Visit T-pointer >ref/ptr >func"
      }
    }
  ]
}