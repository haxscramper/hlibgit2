{
  "records": [
    {
      "name": {
        "name": "git_proxy_options",
        "dbgOrigin": "typedef type /mnt/workspace/repos/libgit2/include/git2/proxy.h:79:3 > typedef!=nullptr > struct"
      },
      "fields": [
        {
          "name": "version",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          }
        },
        {
          "name": "type",
          "type": {
            "name": "git_proxy_t",
            "dbgOrigin": "typedef type /mnt/workspace/repos/libgit2/include/git2/proxy.h:36:3"
          },
          "doc": "/**\n\t * The type of proxy to use, by URL, auto-detect.\n\t */"
        },
        {
          "name": "url",
          "type": {
            "name": "char",
            "isConst": true,
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/**\n\t * The URL of the proxy.\n\t */"
        },
        {
          "name": "credentials",
          "type": {
            "name": "git_credential_acquire_cb",
            "dbgOrigin": "typedef type /mnt/workspace/repos/libgit2/include/git2/credential.h:131:13 <Spelling=/mnt/workspace/repos/libgit2/include/git2/credential.h:131:26>"
          },
          "doc": "/**\n\t * This will be called if the remote host requires\n\t * authentication in order to connect to it.\n\t *\n\t * Returning GIT_PASSTHROUGH will make libgit2 behave as\n\t * though this field isn't set.\n\t */"
        },
        {
          "name": "certificate_check",
          "type": {
            "name": "git_transport_certificate_check_cb",
            "dbgOrigin": "typedef type /mnt/workspace/repos/libgit2/include/git2/cert.h:72:13 <Spelling=/mnt/workspace/repos/libgit2/include/git2/cert.h:72:26>"
          },
          "doc": "/**\n\t * If cert verification fails, this will be called to let the\n\t * user make the final decision of whether to allow the\n\t * connection to proceed. Returns 0 to allow the connection\n\t * or a negative value to indicate an error.\n\t */"
        },
        {
          "name": "payload",
          "type": {
            "name": "void",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr >builtin",
            "isBuiltin": true
          },
          "doc": "/**\n\t * Payload to be provided to the credentials and certificate\n\t * check callbacks.\n\t */"
        }
      ]
    }
  ],
  "enums": [
    {
      "fields": [
        {
          "name": "GIT_PROXY_NONE"
        },
        {
          "name": "GIT_PROXY_AUTO",
          "value": "1"
        },
        {
          "name": "GIT_PROXY_SPECIFIED",
          "value": "2"
        }
      ],
      "name": {
        "name": "git_proxy_t",
        "dbgOrigin": "enum typedef typedef:git_proxy_tname:/mnt/workspace/repos/libgit2/include/git2/proxy.h:20:9"
      }
    }
  ],
  "functions": [
    {
      "name": "git_proxy_options_init",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_proxy_options",
            "isPointer": true,
            "dbgOrigin": "typedef type /mnt/workspace/repos/libgit2/include/git2/proxy.h:79:3"
          },
          "name": "opts"
        },
        {
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "name": "version"
        }
      ]
    }
  ]
}