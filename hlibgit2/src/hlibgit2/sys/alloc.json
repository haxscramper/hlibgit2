{
  "records": [
    {
      "name": {
        "name": "git_allocator",
        "dbgOrigin": " typedef type include/git2/sys/alloc.h:39:3 > typedef!=nullptr > struct"
      },
      "fields": [
        {
          "name": "gmalloc",
          "type": {
            "parameters": [
              {
                "name": "void",
                "qualifiers": [
                  {
                    "isPointer": true
                  }
                ],
                "dbgOrigin": " T-pointer >ref/ptr",
                "isBuiltin": true
              },
              {
                "name": "size_t",
                "dbgOrigin": " typedef type clang/17/include/stddef.h:46:23"
              },
              {
                "name": "char",
                "qualifiers": [
                  {
                    "isPointer": true
                  },
                  {
                    "isConst": true
                  }
                ],
                "dbgOrigin": " T-pointer >ref/ptr T-const >char",
                "isBuiltin": true
              },
              {
                "name": "int",
                "dbgOrigin": " >builtin/unqual",
                "isBuiltin": true
              }
            ],
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "kind": "FunctionPtr",
            "dbgOrigin": " T-pointer >ref/ptr >func"
          },
          "doc": "/** Allocate `n` bytes of memory */"
        },
        {
          "name": "grealloc",
          "type": {
            "parameters": [
              {
                "name": "void",
                "qualifiers": [
                  {
                    "isPointer": true
                  }
                ],
                "dbgOrigin": " T-pointer >ref/ptr",
                "isBuiltin": true
              },
              {
                "name": "void",
                "qualifiers": [
                  {
                    "isPointer": true
                  }
                ],
                "dbgOrigin": " T-pointer >ref/ptr",
                "isBuiltin": true
              },
              {
                "name": "size_t",
                "dbgOrigin": " typedef type clang/17/include/stddef.h:46:23"
              },
              {
                "name": "char",
                "qualifiers": [
                  {
                    "isPointer": true
                  },
                  {
                    "isConst": true
                  }
                ],
                "dbgOrigin": " T-pointer >ref/ptr T-const >char",
                "isBuiltin": true
              },
              {
                "name": "int",
                "dbgOrigin": " >builtin/unqual",
                "isBuiltin": true
              }
            ],
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "kind": "FunctionPtr",
            "dbgOrigin": " T-pointer >ref/ptr >func"
          },
          "doc": "/**\n\t * This function shall deallocate the old object `ptr` and return a\n\t * pointer to a new object that has the size specified by `size`. In\n\t * case `ptr` is `NULL`, a new array shall be allocated.\n\t */"
        },
        {
          "name": "gfree",
          "type": {
            "parameters": [
              {
                "name": "void",
                "isBuiltin": true
              },
              {
                "name": "void",
                "qualifiers": [
                  {
                    "isPointer": true
                  }
                ],
                "dbgOrigin": " T-pointer >ref/ptr",
                "isBuiltin": true
              }
            ],
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "kind": "FunctionPtr",
            "dbgOrigin": " T-pointer >ref/ptr >func"
          },
          "doc": "/**\n\t * This function shall free the memory pointed to by `ptr`. In case\n\t * `ptr` is `NULL`, this shall be a no-op.\n\t */"
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "git_stdalloc_init_allocator",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin/unqual",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_allocator",
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr typedef type include/git2/sys/alloc.h:39:3"
          },
          "name": "allocator"
        }
      ]
    },
    {
      "name": "git_win32_crtdbg_init_allocator",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin/unqual",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_allocator",
            "qualifiers": [
              {
                "isPointer": true
              }
            ],
            "dbgOrigin": " T-pointer >ref/ptr typedef type include/git2/sys/alloc.h:39:3"
          },
          "name": "allocator"
        }
      ]
    }
  ]
}