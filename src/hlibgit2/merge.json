{
  "records": [
    {
      "name": {
        "name": "git_merge_file_input",
        "dbgOrigin": " typedef type libgit2/include/git2/merge.h:46:3 > typedef!=nullptr > struct"
      },
      "fields": [
        {
          "name": "version",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          }
        },
        {
          "name": "ptr",
          "type": {
            "name": "char",
            "isConst": true,
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/** Pointer to the contents of the file. */"
        },
        {
          "name": "size",
          "type": {
            "name": "size_t",
            "dbgOrigin": " typedef type clang/16/include/stddef.h:46:23"
          },
          "doc": "/** Size of the contents pointed to in `ptr`. */"
        },
        {
          "name": "path",
          "type": {
            "name": "char",
            "isConst": true,
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/** File name of the conflicted file, or `NULL` to not merge the path. */"
        },
        {
          "name": "mode",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "doc": "/** File mode of the conflicted file, or `0` to not merge the mode. */"
        }
      ]
    },
    {
      "name": {
        "name": "git_merge_file_options",
        "dbgOrigin": " typedef type libgit2/include/git2/merge.h:218:3 > typedef!=nullptr > struct"
      },
      "fields": [
        {
          "name": "version",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          }
        },
        {
          "name": "ancestor_label",
          "type": {
            "name": "char",
            "isConst": true,
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/**\n\t * Label for the ancestor file side of the conflict which will be prepended\n\t * to labels in diff3-format merge files.\n\t */"
        },
        {
          "name": "our_label",
          "type": {
            "name": "char",
            "isConst": true,
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/**\n\t * Label for our file side of the conflict which will be prepended\n\t * to labels in merge files.\n\t */"
        },
        {
          "name": "their_label",
          "type": {
            "name": "char",
            "isConst": true,
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/**\n\t * Label for their file side of the conflict which will be prepended\n\t * to labels in merge files.\n\t */"
        },
        {
          "name": "favor",
          "type": {
            "name": "git_merge_file_favor_t",
            "dbgOrigin": " typedef type libgit2/include/git2/merge.h:139:3"
          },
          "doc": "/** The file to favor in region conflicts. */"
        },
        {
          "name": "flags",
          "type": {
            "name": "uint32_t",
            "dbgOrigin": " typedef type /include/bits/stdint-uintn.h:26:20"
          },
          "doc": "/** see `git_merge_file_flag_t` above */"
        },
        {
          "name": "marker_size",
          "type": {
            "name": "unsigned short",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "doc": "/** The size of conflict markers (eg, \"<<<<<<<\").  Default is\n\t * GIT_MERGE_CONFLICT_MARKER_SIZE. */"
        }
      ]
    },
    {
      "name": {
        "name": "git_merge_file_result",
        "dbgOrigin": " typedef type libgit2/include/git2/merge.h:259:3 > typedef!=nullptr > struct"
      },
      "fields": [
        {
          "name": "automergeable",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "doc": "/**\n\t * True if the output was automerged, false if the output contains\n\t * conflict markers.\n\t */"
        },
        {
          "name": "path",
          "type": {
            "name": "char",
            "isConst": true,
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/**\n\t * The path that the resultant merge file should use, or NULL if a\n\t * filename conflict would occur.\n\t */"
        },
        {
          "name": "mode",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "doc": "/** The mode that the resultant merge file should use.  */"
        },
        {
          "name": "ptr",
          "type": {
            "name": "char",
            "isConst": true,
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/** The contents of the merge. */"
        },
        {
          "name": "len",
          "type": {
            "name": "size_t",
            "dbgOrigin": " typedef type clang/16/include/stddef.h:46:23"
          },
          "doc": "/** The length of the merge contents. */"
        }
      ]
    },
    {
      "name": {
        "name": "git_merge_options",
        "dbgOrigin": " typedef type libgit2/include/git2/merge.h:313:3 > typedef!=nullptr > struct"
      },
      "fields": [
        {
          "name": "version",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          }
        },
        {
          "name": "flags",
          "type": {
            "name": "uint32_t",
            "dbgOrigin": " typedef type /include/bits/stdint-uintn.h:26:20"
          },
          "doc": "/** See `git_merge_flag_t` above */"
        },
        {
          "name": "rename_threshold",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "doc": "/**\n\t * Similarity to consider a file renamed (default 50).  If\n\t * `GIT_MERGE_FIND_RENAMES` is enabled, added files will be compared\n\t * with deleted files to determine their similarity.  Files that are\n\t * more similar than the rename threshold (percentage-wise) will be\n\t * treated as a rename.\n\t */"
        },
        {
          "name": "target_limit",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "doc": "/**\n\t * Maximum similarity sources to examine for renames (default 200).\n\t * If the number of rename candidates (add / delete pairs) is greater\n\t * than this value, inexact rename detection is aborted.\n\t *\n\t * This setting overrides the `merge.renameLimit` configuration value.\n\t */"
        },
        {
          "name": "metric",
          "type": {
            "name": "git_diff_similarity_metric",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/diff.h:742:3"
          },
          "doc": "/** Pluggable similarity metric; pass NULL to use internal metric */"
        },
        {
          "name": "recursion_limit",
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "doc": "/**\n\t * Maximum number of times to merge common ancestors to build a\n\t * virtual merge base when faced with criss-cross merges.  When this\n\t * limit is reached, the next ancestor will simply be used instead of\n\t * attempting to merge it.  The default is unlimited.\n\t */"
        },
        {
          "name": "default_driver",
          "type": {
            "name": "char",
            "isConst": true,
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-const >char",
            "isBuiltin": true
          },
          "doc": "/**\n\t * Default merge driver to be used when both sides of a merge have\n\t * changed.  The default is the `text` driver.\n\t */"
        },
        {
          "name": "file_favor",
          "type": {
            "name": "git_merge_file_favor_t",
            "dbgOrigin": " typedef type libgit2/include/git2/merge.h:139:3"
          },
          "doc": "/**\n\t * Flags for handling conflicting content, to be used with the standard\n\t * (`text`) merge driver.\n\t */"
        },
        {
          "name": "file_flags",
          "type": {
            "name": "uint32_t",
            "dbgOrigin": " typedef type /include/bits/stdint-uintn.h:26:20"
          },
          "doc": "/** see `git_merge_file_flag_t` above */"
        }
      ]
    }
  ],
  "enums": [
    {
      "fields": [
        {
          "name": "GIT_MERGE_FIND_RENAMES",
          "value": "1"
        },
        {
          "name": "GIT_MERGE_FAIL_ON_CONFLICT",
          "value": "2"
        },
        {
          "name": "GIT_MERGE_SKIP_REUC",
          "value": "4"
        },
        {
          "name": "GIT_MERGE_NO_RECURSIVE",
          "value": "8"
        },
        {
          "name": "GIT_MERGE_VIRTUAL_BASE",
          "value": "16"
        }
      ],
      "name": {
        "name": "git_merge_flag_t",
        "dbgOrigin": "enum typedef typedef:git_merge_flag_tname:libgit2/include/git2/merge.h:68:9"
      }
    },
    {
      "fields": [
        {
          "name": "GIT_MERGE_FILE_FAVOR_NORMAL"
        },
        {
          "name": "GIT_MERGE_FILE_FAVOR_OURS",
          "value": "1"
        },
        {
          "name": "GIT_MERGE_FILE_FAVOR_THEIRS",
          "value": "2"
        },
        {
          "name": "GIT_MERGE_FILE_FAVOR_UNION",
          "value": "3"
        }
      ],
      "name": {
        "name": "git_merge_file_favor_t",
        "dbgOrigin": "enum typedef typedef:git_merge_file_favor_tname:libgit2/include/git2/merge.h:109:9"
      }
    },
    {
      "fields": [
        {
          "name": "GIT_MERGE_FILE_DEFAULT"
        },
        {
          "name": "GIT_MERGE_FILE_STYLE_MERGE",
          "value": "1"
        },
        {
          "name": "GIT_MERGE_FILE_STYLE_DIFF3",
          "value": "2"
        },
        {
          "name": "GIT_MERGE_FILE_SIMPLIFY_ALNUM",
          "value": "4"
        },
        {
          "name": "GIT_MERGE_FILE_IGNORE_WHITESPACE",
          "value": "8"
        },
        {
          "name": "GIT_MERGE_FILE_IGNORE_WHITESPACE_CHANGE",
          "value": "16"
        },
        {
          "name": "GIT_MERGE_FILE_IGNORE_WHITESPACE_EOL",
          "value": "32"
        },
        {
          "name": "GIT_MERGE_FILE_DIFF_PATIENCE",
          "value": "64"
        },
        {
          "name": "GIT_MERGE_FILE_DIFF_MINIMAL",
          "value": "128"
        },
        {
          "name": "GIT_MERGE_FILE_STYLE_ZDIFF3",
          "value": "256"
        },
        {
          "name": "GIT_MERGE_FILE_ACCEPT_CONFLICTS",
          "value": "512"
        }
      ],
      "name": {
        "name": "git_merge_file_flag_t",
        "dbgOrigin": "enum typedef typedef:git_merge_file_flag_tname:libgit2/include/git2/merge.h:144:9"
      }
    },
    {
      "fields": [
        {
          "name": "GIT_MERGE_ANALYSIS_NONE"
        },
        {
          "name": "GIT_MERGE_ANALYSIS_NORMAL",
          "value": "1"
        },
        {
          "name": "GIT_MERGE_ANALYSIS_UP_TO_DATE",
          "value": "2"
        },
        {
          "name": "GIT_MERGE_ANALYSIS_FASTFORWARD",
          "value": "4"
        },
        {
          "name": "GIT_MERGE_ANALYSIS_UNBORN",
          "value": "8"
        }
      ],
      "name": {
        "name": "git_merge_analysis_t",
        "dbgOrigin": "enum typedef typedef:git_merge_analysis_tname:libgit2/include/git2/merge.h:334:9"
      }
    },
    {
      "fields": [
        {
          "name": "GIT_MERGE_PREFERENCE_NONE"
        },
        {
          "name": "GIT_MERGE_PREFERENCE_NO_FASTFORWARD",
          "value": "1"
        },
        {
          "name": "GIT_MERGE_PREFERENCE_FASTFORWARD_ONLY",
          "value": "2"
        }
      ],
      "name": {
        "name": "git_merge_preference_t",
        "dbgOrigin": "enum typedef typedef:git_merge_preference_tname:libgit2/include/git2/merge.h:368:9"
      }
    }
  ],
  "functions": [
    {
      "name": "git_merge_file_input_init",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_merge_file_input",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:46:3"
          },
          "name": "opts"
        },
        {
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "name": "version"
        }
      ]
    },
    {
      "name": "git_merge_file_options_init",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_merge_file_options",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:218:3"
          },
          "name": "opts"
        },
        {
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "name": "version"
        }
      ]
    },
    {
      "name": "git_merge_options_init",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_merge_options",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:313:3"
          },
          "name": "opts"
        },
        {
          "type": {
            "name": "unsigned int",
            "dbgOrigin": " >builtin",
            "isBuiltin": true
          },
          "name": "version"
        }
      ]
    },
    {
      "name": "git_merge_analysis",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_merge_analysis_t",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:363:3"
          },
          "name": "analysis_out"
        },
        {
          "type": {
            "name": "git_merge_preference_t",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:386:3"
          },
          "name": "preference_out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "git_annotated_commit",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:198:37"
          },
          "name": "their_heads"
        },
        {
          "type": {
            "name": "size_t",
            "dbgOrigin": " typedef type clang/16/include/stddef.h:46:23"
          },
          "name": "their_heads_len"
        }
      ]
    },
    {
      "name": "git_merge_analysis_for_ref",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_merge_analysis_t",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:363:3"
          },
          "name": "analysis_out"
        },
        {
          "type": {
            "name": "git_merge_preference_t",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:386:3"
          },
          "name": "preference_out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "git_reference",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:189:30"
          },
          "name": "our_ref"
        },
        {
          "type": {
            "name": "git_annotated_commit",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:198:37"
          },
          "name": "their_heads"
        },
        {
          "type": {
            "name": "size_t",
            "dbgOrigin": " typedef type clang/16/include/stddef.h:46:23"
          },
          "name": "their_heads_len"
        }
      ]
    },
    {
      "name": "git_merge_base",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "one"
        },
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "two"
        }
      ]
    },
    {
      "name": "git_merge_bases",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_oidarray",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oidarray.h:19:3"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "one"
        },
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "two"
        }
      ]
    },
    {
      "name": "git_merge_base_many",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "size_t",
            "dbgOrigin": " typedef type clang/16/include/stddef.h:46:23"
          },
          "name": "length"
        },
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "input_array"
        }
      ]
    },
    {
      "name": "git_merge_bases_many",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_oidarray",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oidarray.h:19:3"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "size_t",
            "dbgOrigin": " typedef type clang/16/include/stddef.h:46:23"
          },
          "name": "length"
        },
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "input_array"
        }
      ]
    },
    {
      "name": "git_merge_base_octopus",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "size_t",
            "dbgOrigin": " typedef type clang/16/include/stddef.h:46:23"
          },
          "name": "length"
        },
        {
          "type": {
            "name": "git_oid",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/oid.h:108:3"
          },
          "name": "input_array"
        }
      ]
    },
    {
      "name": "git_merge_file",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_merge_file_result",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:259:3"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "git_merge_file_input",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:46:3"
          },
          "name": "ancestor"
        },
        {
          "type": {
            "name": "git_merge_file_input",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:46:3"
          },
          "name": "ours"
        },
        {
          "type": {
            "name": "git_merge_file_input",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:46:3"
          },
          "name": "theirs"
        },
        {
          "type": {
            "name": "git_merge_file_options",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:218:3"
          },
          "name": "opts"
        }
      ]
    },
    {
      "name": "git_merge_file_from_index",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_merge_file_result",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:259:3"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "git_index_entry",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/index.h:70:3"
          },
          "name": "ancestor"
        },
        {
          "type": {
            "name": "git_index_entry",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/index.h:70:3"
          },
          "name": "ours"
        },
        {
          "type": {
            "name": "git_index_entry",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/index.h:70:3"
          },
          "name": "theirs"
        },
        {
          "type": {
            "name": "git_merge_file_options",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:218:3"
          },
          "name": "opts"
        }
      ]
    },
    {
      "name": "git_merge_file_result_free",
      "resultTy": {
        "name": "void",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_merge_file_result",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:259:3"
          },
          "name": "result"
        }
      ]
    },
    {
      "name": "git_merge_trees",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_index",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:148:26"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "git_tree",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:142:25"
          },
          "name": "ancestor_tree"
        },
        {
          "type": {
            "name": "git_tree",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:142:25"
          },
          "name": "our_tree"
        },
        {
          "type": {
            "name": "git_tree",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:142:25"
          },
          "name": "their_tree"
        },
        {
          "type": {
            "name": "git_merge_options",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:313:3"
          },
          "name": "opts"
        }
      ]
    },
    {
      "name": "git_merge_commits",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_index",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:148:26"
          },
          "name": "out"
        },
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "git_commit",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:136:27"
          },
          "name": "our_commit"
        },
        {
          "type": {
            "name": "git_commit",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:136:27"
          },
          "name": "their_commit"
        },
        {
          "type": {
            "name": "git_merge_options",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:313:3"
          },
          "name": "opts"
        }
      ]
    },
    {
      "name": "git_merge",
      "resultTy": {
        "name": "int",
        "dbgOrigin": " >builtin",
        "isBuiltin": true
      },
      "arguments": [
        {
          "type": {
            "name": "git_repository",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:118:31"
          },
          "name": "repo"
        },
        {
          "type": {
            "name": "git_annotated_commit",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr T-pointer >ref/ptr typedef type libgit2/include/git2/types.h:198:37"
          },
          "name": "their_heads"
        },
        {
          "type": {
            "name": "size_t",
            "dbgOrigin": " typedef type clang/16/include/stddef.h:46:23"
          },
          "name": "their_heads_len"
        },
        {
          "type": {
            "name": "git_merge_options",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/merge.h:313:3"
          },
          "name": "merge_opts"
        },
        {
          "type": {
            "name": "git_checkout_options",
            "isPointer": true,
            "dbgOrigin": " T-pointer >ref/ptr typedef type libgit2/include/git2/checkout.h:345:3"
          },
          "name": "checkout_opts"
        }
      ]
    }
  ]
}